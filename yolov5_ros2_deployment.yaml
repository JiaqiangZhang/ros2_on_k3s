apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: nvidia
handler: nvidia
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yolov5-ros2-deployment
  labels:
    app: yolov5-ros2
spec:
  selector:
    matchLabels:
      app: yolov5-ros2
  replicas: 1
  template:
    metadata:
      labels:
        app: yolov5-ros2
    spec:
      runtimeClassName: nvidia
      hostNetwork: true
      # tolerations:
      #   - effect: NoExecute
      #     key: node.kubernetes.io/unreachable
      #     operator: Exists
      #     tolerationSeconds: 2
      #   - effect: NoExecute
      #     key: node.kubernetes.io/not-ready
      #     operator: Exists
      #     tolerationSeconds: 2
      containers:
        - name: object-detection
          image: 192.168.193.113:5000/yolov5_ros2:galactic-k3s-test4
          # yolov5_ros2:galactic-latest hello-world
          command: ["/bin/bash", "-c"]
          args: ["source /opt/ros/galactic/setup.bash && source /app/yolo_ws/install/setup.bash && export ROS_DOMAIN_ID=7 && ros2 run yolov5_ros2 yolo_detect --ros-args -p device:=cpu -p image_topic:=/image_raw -p model:=yolov5s"]
          resources:
            limits:
              nvidia.com/gpu: 0
          # ros2 run yolov5_ros2 yolo_detect --ros-args -p device:=cpu -p image_topic:=/image_raw -p model:=yolov5s
          # ros2 run usb_cam usb_cam_node_exe
          # while true; do echo hello; sleep 10; done
          # args: ["source /opt/ros/foxy/setup.bash && export ROS_DOMAID_ID=56 && apt update && apt install -y curl && curl https://raw.githubusercontent.com/canonical/robotics-blog-k8s/main/publisher.py > publisher.py && /bin/python3 publisher.py talker"]
      # nodeSelector:
      #     nodetype: agentnode

# what's wrong
# kubectl logs yolov5-ros2-deployment-5985c4775c-zz7bb --all-containers
# -> Package 'yolov5_ros2' not found
# -> ImportError: cannot import name 'ParserError' from 'dateutil.parser' (/usr/lib/python3/dist-packages/dateutil/parser/__init__.py)

